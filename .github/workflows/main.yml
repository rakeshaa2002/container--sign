name: Build, Push & Sign (GHCR)

on:
  push:
    branches: [ "main" ]
    tags:     [ "v*" ]    # tag builds also get nice semver tags
  workflow_dispatch:

permissions:
  contents: read
  packages: write     # needed to push to GHCR
  id-token: write     # needed for keyless signing via OIDC

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}  # owner/repo

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # create useful tags: branch, tag, sha, latest on default branch
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build & Push (multi-arch)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign the image (keyless via OIDC)
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "false"
          IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          DIGEST: ${{ steps.build.outputs.digest }}
        run: |
          # Sign by digest (best practice)
          cosign sign --yes "${IMAGE}@${DIGEST}"

      - name: Verify signature (defense-in-depth)
        if: ${{ github.event_name != 'pull_request' }}
        env:
          IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          DIGEST: ${{ steps.build.outputs.digest }}
        run: |
          # Verify the signature was created by *this* repo's workflow via GitHub OIDC
          cosign verify "${IMAGE}@${DIGEST}" \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com \
            --certificate-identity-regex "^https://github.com/${{ github.repository }}/.+" 
